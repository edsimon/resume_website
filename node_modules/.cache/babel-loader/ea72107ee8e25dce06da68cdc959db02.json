{"ast":null,"code":"var _jsxFileName = \"/Users/se/Documents/resume/dynamic_website/resume_website/src/components/pageComponent/ProjectsPage.js\";\nimport React, { Component } from \"react\";\nimport Background from \"../backgroundComponent/Background\";\nimport Menu from \"../menuComponent/Menu\";\nimport \"../../assets/css/projectPage.css\";\nimport Project from \"../projectsComponent/Project\";\nimport twitter from \"../../assets/img/twitter.png\";\nimport fingertime from \"../../assets/img/fingerTime.png\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\nconst scaleDown = transitions.scaleDown;\nvar start = \"0,0 70,0 60,40 50,60 40,100 0,100\",\n    end = \"0,0 25,0 20,20 20,80 15,100 0,100\";\n\nclass ProjectPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.something = () => {\n      this.grid.updateLayout();\n    };\n\n    this.addToList = item => {\n      this.filterList.append(item);\n    };\n\n    this.getComponents = list => {\n      return React.createElement(StackGrid, {\n        className: \"pintrestView\",\n        columnWidth: 300,\n        duration: 500,\n        gutterWidth: 20,\n        appearDelay: 200,\n        appear: scaleDown.appear,\n        appeared: scaleDown.appeared,\n        enter: scaleDown.enter,\n        entered: scaleDown.entered,\n        leaved: scaleDown.leaved,\n        gridRef: grid => this.grid = grid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, list.includes(\"Python\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }) : null, list.some(r => [\"Application\", \"Swift\"].indexOf(r) >= 0) ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : null, list.includes(\"Python\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }) : null, list.some(r => [\"Application\", \"Swift\"].indexOf(r) >= 0) ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }) : null, list.includes(\"Python\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }) : null, list.some(r => [\"Application\", \"Swift\"].indexOf(r) >= 0) ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }) : null);\n    };\n\n    this.props.history.push('/');\n    this.props.history.push(this.props.match.url);\n    var filterList = [];\n    this.addToList = this.addToList.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Background, {\n      start: start,\n      end: end,\n      delay: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      addToList: this.addToList,\n      header: \"Projects\",\n      thisSite: \"/projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), this.getComponents(this.state.list));\n  }\n\n}\n\nexport default ProjectPage;\n/*\n<ProjectContainer/>\n */","map":{"version":3,"sources":["/Users/se/Documents/resume/dynamic_website/resume_website/src/components/pageComponent/ProjectsPage.js"],"names":["React","Component","Background","Menu","Project","twitter","fingertime","StackGrid","transitions","scaleDown","start","end","ProjectPage","constructor","props","something","grid","updateLayout","addToList","item","filterList","append","getComponents","list","appear","appeared","enter","entered","leaved","includes","some","r","indexOf","history","push","match","url","bind","render","state"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport Background from \"../backgroundComponent/Background\";\nimport Menu from \"../menuComponent/Menu\";\nimport \"../../assets/css/projectPage.css\";\nimport Project from \"../projectsComponent/Project\";\nimport twitter from \"../../assets/img/twitter.png\";\nimport fingertime from \"../../assets/img/fingerTime.png\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\n\nconst { scaleDown } = transitions;\n\nvar start = \"0,0 70,0 60,40 50,60 40,100 0,100\",\n    end   = \"0,0 25,0 20,20 20,80 15,100 0,100\";\n\nclass ProjectPage extends Component{\n    constructor(props) {\n        super(props);\n        this.props.history.push('/');\n        this.props.history.push(this.props.match.url);\n        var filterList = [];\n        this.addToList = this.addToList.bind(this)\n    }\n\n    something = () => {\n        this.grid.updateLayout();\n    };\n\n    render() {\n        return (\n            <div className={\"projectPage\"}>\n                <Background start={start} end={end} delay={0}/>\n                <Menu addToList={this.addToList} header={\"Projects\"} thisSite={\"/projects\"}/>\n                {this.getComponents(this.state.list)}\n            </div>\n        );\n    }\n\n    addToList = item => {\n        this.filterList.append(item)\n    }\n\n    getComponents = list => {\n        return(\n            <StackGrid\n                className={\"pintrestView\"}\n                columnWidth={300}\n                duration={500}\n                gutterWidth={20}\n                appearDelay={200}\n                appear={scaleDown.appear}\n                appeared={scaleDown.appeared}\n                enter={scaleDown.enter}\n                entered={scaleDown.entered}\n                leaved={scaleDown.leaved}\n                gridRef={grid => this.grid = grid}\n            >\n                { list.includes(\"Python\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n                { list.some(r =>[\"Application\",\"Swift\"].indexOf(r) >= 0) ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n                { list.includes(\"Python\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n                { list.some(r =>[\"Application\",\"Swift\"].indexOf(r) >= 0) ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n                { list.includes(\"Python\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n                { list.some(r =>[\"Application\",\"Swift\"].indexOf(r) >= 0) ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n            </StackGrid>\n        )\n    }\n\n}\n\nexport default ProjectPage;\n\n/*\n<ProjectContainer/>\n */"]},"metadata":{},"sourceType":"module"}