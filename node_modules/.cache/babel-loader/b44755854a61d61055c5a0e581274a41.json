{"ast":null,"code":"var _jsxFileName = \"/Users/se/Documents/resume/dynamic_website/resume_website/src/components/pageComponent/ProjectsPage.js\";\nimport React, { Component } from \"react\";\nimport Background from \"../backgroundComponent/Background\";\nimport Menu from \"../menuComponent/Menu\";\nimport \"../../assets/css/projectPage.css\";\nimport Project from \"../projectsComponent/Project\";\nimport twitter from \"../../assets/img/twitter.png\";\nimport fingertime from \"../../assets/img/fingerTime.png\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\nconst scaleDown = transitions.scaleDown;\nvar start = \"0,0 70,0 60,40 50,60 40,100 0,100\",\n    end = \"0,0 25,0 20,20 20,80 15,100 0,100\";\n\nclass ProjectPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.something = () => {\n      this.grid.updateLayout();\n    };\n\n    this.manageFilter = item => {\n      let tmpSet = new Set(this.state.filterSet);\n      console.log(\"before \" + this.state.filterSet.has(item));\n      console.log(tmpSet);\n\n      if (tmpSet.has(item)) {\n        console.log(\"is has working?\");\n        this.removeFromSet(item);\n      } else {\n        this.addToList(item);\n      }\n\n      console.log(\"after \" + this.state.filterSet.has(item));\n      console.log(this.state.filterSet);\n    };\n\n    this.addToList = item => {\n      let tmpSet = new Set(this.state.filterSet);\n\n      if (!this.state.haveFilter) {\n        this.setState({\n          haveFilter: true\n        });\n      }\n\n      tmpSet.add(item);\n      this.setState({\n        filterSet: tmpSet\n      });\n    };\n\n    this.removeFromSet = item => {\n      if (this.state.filterSet.size === 1) {\n        console.log(\"no filters left\");\n        this.setState({\n          filterSet: new Set(this.state.allItems),\n          haveFilter: false\n        });\n      } else {\n        this.setState({\n          filterSet: this.state.filterSet.delete(item)\n        });\n      }\n    };\n\n    this.getComponents = set => {\n      return React.createElement(StackGrid, {\n        className: \"pintrestView\",\n        columnWidth: 300,\n        duration: 500,\n        gutterWidth: 20,\n        appearDelay: 200,\n        appear: scaleDown.appear,\n        appeared: scaleDown.appeared,\n        enter: scaleDown.enter,\n        entered: scaleDown.entered,\n        leaved: scaleDown.leaved,\n        gridRef: grid => this.grid = grid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, set.has(\"Python\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }) : null, set.has(\"Application\") || set.has(\"Swift\") ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }) : null, set.has(\"Python\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }) : null, set.has(\"Application\") || set.has(\"Swift\") ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }) : null, set.has(\"Python\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }) : null, set.has(\"Application\") || set.has(\"Swift\") ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }) : null);\n    };\n\n    this.props.history.push('/');\n    this.props.history.push(this.props.match.url);\n    this.state = {\n      filterSet: new Set(),\n      haveFilter: false,\n      allItems: new Set([\"Java\", \"Python\", \"Machine learning\", \"Application\"])\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Background, {\n      start: start,\n      end: end,\n      delay: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      manageFilter: this.manageFilter,\n      header: \"Projects\",\n      thisSite: \"/projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), this.getComponents(this.state.allItems));\n  }\n\n}\n\nexport default ProjectPage;","map":{"version":3,"sources":["/Users/se/Documents/resume/dynamic_website/resume_website/src/components/pageComponent/ProjectsPage.js"],"names":["React","Component","Background","Menu","Project","twitter","fingertime","StackGrid","transitions","scaleDown","start","end","ProjectPage","constructor","props","something","grid","updateLayout","manageFilter","item","tmpSet","Set","state","filterSet","console","log","has","removeFromSet","addToList","haveFilter","setState","add","size","allItems","delete","getComponents","set","appear","appeared","enter","entered","leaved","history","push","match","url","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport Background from \"../backgroundComponent/Background\";\nimport Menu from \"../menuComponent/Menu\";\nimport \"../../assets/css/projectPage.css\";\nimport Project from \"../projectsComponent/Project\";\nimport twitter from \"../../assets/img/twitter.png\";\nimport fingertime from \"../../assets/img/fingerTime.png\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\n\nconst { scaleDown } = transitions;\n\nvar start = \"0,0 70,0 60,40 50,60 40,100 0,100\",\n    end   = \"0,0 25,0 20,20 20,80 15,100 0,100\";\n\nclass ProjectPage extends Component{\n    constructor(props) {\n        super(props);\n        this.props.history.push('/');\n        this.props.history.push(this.props.match.url);\n        this.state = {\n            filterSet : new Set(),\n            haveFilter : false,\n            allItems : new Set([\"Java\",\"Python\",\"Machine learning\",\"Application\"])\n        }\n    }\n\n    something = () => {\n        this.grid.updateLayout();\n    };\n\n    render() {\n        return (\n            <div className={\"projectPage\"}>\n                <Background start={start} end={end} delay={0}/>\n                <Menu manageFilter={this.manageFilter} header={\"Projects\"} thisSite={\"/projects\"}/>\n                {this.getComponents(this.state.allItems)}\n            </div>\n        );\n    }\n\n    manageFilter = item => {\n        let tmpSet = new Set(this.state.filterSet)\n        console.log(\"before \" + this.state.filterSet.has(item))\n        console.log(tmpSet)\n        if (tmpSet.has(item)){\n            console.log(\"is has working?\")\n            this.removeFromSet(item)\n        }\n        else{\n            this.addToList(item)\n        }\n        console.log(\"after \" + this.state.filterSet.has(item))\n        console.log(this.state.filterSet)\n    }\n\n    addToList = item => {\n        let tmpSet = new Set(this.state.filterSet);\n        if (!this.state.haveFilter){\n            this.setState({haveFilter : true})\n        }\n        tmpSet.add(item);\n        this.setState({\n            filterSet: tmpSet\n        })\n    }\n\n    removeFromSet = item => {\n        if(this.state.filterSet.size === 1){\n            console.log(\"no filters left\")\n            this.setState({\n                filterSet: new Set(this.state.allItems),\n                haveFilter : false\n            })\n        }\n        else {\n            this.setState({\n                filterSet: this.state.filterSet.delete(item)\n            })\n        }\n    }\n\n    getComponents = set => {\n        return(\n            <StackGrid\n                className={\"pintrestView\"}\n                columnWidth={300}\n                duration={500}\n                gutterWidth={20}\n                appearDelay={200}\n                appear={scaleDown.appear}\n                appeared={scaleDown.appeared}\n                enter={scaleDown.enter}\n                entered={scaleDown.entered}\n                leaved={scaleDown.leaved}\n                gridRef={grid => this.grid = grid}\n            >\n\n                { set.has(\"Python\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n\n                { set.has(\"Application\") || set.has(\"Swift\") ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n\n                { set.has(\"Python\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n\n                { set.has(\"Application\") || set.has(\"Swift\") ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n\n                { set.has(\"Python\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n\n                { set.has(\"Application\") || set.has(\"Swift\") ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n            </StackGrid>\n\n        )\n    }\n}\n\nexport default ProjectPage;"]},"metadata":{},"sourceType":"module"}