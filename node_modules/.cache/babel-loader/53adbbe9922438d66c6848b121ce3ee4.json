{"ast":null,"code":"var _jsxFileName = \"/Users/se/Documents/resume/dynamic_website/resume_website/src/components/pageComponent/ProjectsPage.js\";\nimport React, { Component } from \"react\";\nimport Background from \"../backgroundComponent/Background\";\nimport Menu from \"../menuComponent/Menu\";\nimport \"../../assets/css/projectPage.css\";\nimport Project from \"../projectsComponent/Project\";\nimport twitter from \"../../assets/img/twitter.png\";\nimport fingertime from \"../../assets/img/fingerTime.png\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\nconst scaleDown = transitions.scaleDown;\nvar start = \"0,0 70,0 60,40 50,60 40,100 0,100\",\n    end = \"0,0 25,0 20,20 20,80 15,100 0,100\";\n\nclass ProjectPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.something = () => {\n      this.grid.updateLayout();\n    };\n\n    this.manageFilter = item => {\n      if (!this.state.haveFilter) {\n        this.setState({\n          filterSet: new Set(),\n          haveFilter: true\n        });\n        this.addItem(item);\n      } else {\n        if (this.state.filterSet.has(item)) {\n          this.removeItem(item);\n        } else {\n          this.addItem(item);\n        }\n      }\n    };\n\n    this.getComponents = set => {\n      return React.createElement(StackGrid, {\n        className: \"pintrestView\",\n        columnWidth: 300,\n        duration: 500,\n        gutterWidth: 20,\n        appearDelay: 200,\n        appear: scaleDown.appear,\n        appeared: scaleDown.appeared,\n        enter: scaleDown.enter,\n        entered: scaleDown.entered,\n        leaved: scaleDown.leaved,\n        gridRef: grid => this.grid = grid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, set.has(\"Java\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }) : null, set.has(\"Application\") || set.has(\"Swift\") ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }) : null, set.has(\"Python\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }) : null, set.has(\"Machine learning\") || set.has(\"Swift\") ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }) : null, set.has(\"Python\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }) : null, set.has(\"Application\") || set.has(\"Swift\") ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }) : null);\n    };\n\n    this.props.history.push('/');\n    this.props.history.push(this.props.match.url);\n    this.state = {\n      filterSet: new Set([\"Java\", \"Python\", \"Machine learning\", \"Application\", \"Swift\"]),\n      haveFilter: false,\n      allItems: [\"Java\", \"Python\", \"Machine learning\", \"Application\", \"Swift\"]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Background, {\n      start: start,\n      end: end,\n      delay: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      manageFilter: this.manageFilter,\n      header: \"Projects\",\n      thisSite: \"/projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), this.getComponents(this.state.filterSet));\n  }\n\n  addItem(item) {\n    this.setState(({\n      filterSet\n    }) => ({\n      filterSet: new Set(filterSet).add(item)\n    }));\n  }\n\n  removeItem(item) {\n    this.setState(({\n      filterSet\n    }) => {\n      const newChecked = new Set(filterSet);\n      newChecked.delete(item);\n      return {\n        filterSet: newChecked\n      };\n    });\n    console.log(this.state.filterSet.size);\n\n    if (this.state.filterSet.size === 1) {\n      this.setState({\n        filterSet: new Set(this.state.allItems),\n        haveFilter: false\n      });\n    }\n  }\n\n}\n\nexport default ProjectPage;","map":{"version":3,"sources":["/Users/se/Documents/resume/dynamic_website/resume_website/src/components/pageComponent/ProjectsPage.js"],"names":["React","Component","Background","Menu","Project","twitter","fingertime","StackGrid","transitions","scaleDown","start","end","ProjectPage","constructor","props","something","grid","updateLayout","manageFilter","item","state","haveFilter","setState","filterSet","Set","addItem","has","removeItem","getComponents","set","appear","appeared","enter","entered","leaved","history","push","match","url","allItems","render","add","newChecked","delete","console","log","size"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport Background from \"../backgroundComponent/Background\";\nimport Menu from \"../menuComponent/Menu\";\nimport \"../../assets/css/projectPage.css\";\nimport Project from \"../projectsComponent/Project\";\nimport twitter from \"../../assets/img/twitter.png\";\nimport fingertime from \"../../assets/img/fingerTime.png\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\n\nconst { scaleDown } = transitions;\n\nvar start = \"0,0 70,0 60,40 50,60 40,100 0,100\",\n    end   = \"0,0 25,0 20,20 20,80 15,100 0,100\";\n\nclass ProjectPage extends Component{\n    constructor(props) {\n        super(props);\n        this.props.history.push('/');\n        this.props.history.push(this.props.match.url);\n        this.state = {\n            filterSet : new Set([\"Java\",\"Python\",\"Machine learning\",\"Application\",\"Swift\"]),\n            haveFilter : false,\n            allItems : [\"Java\",\"Python\",\"Machine learning\",\"Application\",\"Swift\"]\n        }\n    }\n\n    something = () => {\n        this.grid.updateLayout();\n    };\n\n    render() {\n        return (\n            <div className={\"projectPage\"}>\n                <Background start={start} end={end} delay={0}/>\n                <Menu manageFilter={this.manageFilter} header={\"Projects\"} thisSite={\"/projects\"}/>\n                {this.getComponents(this.state.filterSet)}\n            </div>\n        );\n    }\n\n    manageFilter = item => {\n        if(!this.state.haveFilter){\n            this.setState({\n                filterSet: new Set(),\n                haveFilter: true\n            })\n            this.addItem(item)\n        }\n        else {\n            if (this.state.filterSet.has(item)) {\n                this.removeItem(item)\n            } else {\n                this.addItem(item)\n            }\n        }\n    };\n\n    addItem(item) {\n        this.setState(({ filterSet }) => ({\n            filterSet: new Set(filterSet).add(item)\n        }));\n    }\n\n    removeItem(item) {\n        this.setState(({ filterSet }) => {\n            const newChecked = new Set(filterSet);\n            newChecked.delete(item);\n\n            return {\n                filterSet: newChecked\n            };\n        });\n        console.log(this.state.filterSet.size);\n        if (this.state.filterSet.size === 1){\n            this.setState({\n                filterSet: new Set(this.state.allItems),\n                haveFilter: false\n            })\n        }\n    }\n\n    getComponents = set => {\n        return(\n            <StackGrid\n                className={\"pintrestView\"}\n                columnWidth={300}\n                duration={500}\n                gutterWidth={20}\n                appearDelay={200}\n                appear={scaleDown.appear}\n                appeared={scaleDown.appeared}\n                enter={scaleDown.enter}\n                entered={scaleDown.entered}\n                leaved={scaleDown.leaved}\n                gridRef={grid => this.grid = grid}\n            >\n\n                { set.has(\"Java\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n\n                { set.has(\"Application\") || set.has(\"Swift\") ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n\n                { set.has(\"Python\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n\n                { set.has(\"Machine learning\") || set.has(\"Swift\") ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n\n                { set.has(\"Python\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n\n                { set.has(\"Application\") || set.has(\"Swift\") ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n            </StackGrid>\n\n        )\n    }\n}\n\nexport default ProjectPage;"]},"metadata":{},"sourceType":"module"}