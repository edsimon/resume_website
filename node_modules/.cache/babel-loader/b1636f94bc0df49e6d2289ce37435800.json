{"ast":null,"code":"var _jsxFileName = \"/Users/se/Documents/resume/dynamic_website/resume_website/src/components/pageComponent/ProjectsPage.js\";\nimport React, { Component } from \"react\";\nimport Background from \"../backgroundComponent/Background\";\nimport Menu from \"../menuComponent/Menu\";\nimport \"../../assets/css/projectPage.css\";\nimport Project from \"../projectsComponent/Project\";\nimport twitter from \"../../assets/img/twitter.png\";\nimport fingertime from \"../../assets/img/fingerTime.png\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\nconst scaleDown = transitions.scaleDown;\nvar start = \"0,0 70,0 60,40 50,60 40,100 0,100\",\n    end = \"0,0 25,0 20,20 20,80 15,100 0,100\";\n\nclass ProjectPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.something = () => {\n      this.grid.updateLayout();\n    };\n\n    this.addToList = item => {\n      this.setState(({\n        filterSet\n      }) => ({\n        filterSet: new Set(filterSet).add(item)\n      }));\n      console.log(this.state.filterSet);\n    };\n\n    this.removeFromSet = item => {\n      console.log(this.state.filterSet);\n    };\n\n    this.getComponents = list => {\n      return React.createElement(StackGrid, {\n        className: \"pintrestView\",\n        columnWidth: 300,\n        duration: 500,\n        gutterWidth: 20,\n        appearDelay: 200,\n        appear: scaleDown.appear,\n        appeared: scaleDown.appeared,\n        enter: scaleDown.enter,\n        entered: scaleDown.entered,\n        leaved: scaleDown.leaved,\n        gridRef: grid => this.grid = grid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, list.includes(\"Python\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }) : null, list.some(r => [\"Application\", \"Swift\"].indexOf(r) >= 0) ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }) : null, list.includes(\"Python\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }) : null, list.some(r => [\"Application\", \"Swift\"].indexOf(r) >= 0) ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }) : null, list.includes(\"Python\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }) : null, list.some(r => [\"Application\", \"Swift\"].indexOf(r) >= 0) ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }) : null);\n    };\n\n    this.props.history.push('/');\n    this.props.history.push(this.props.match.url);\n    this.state = {\n      filterSet: new Set()\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Background, {\n      start: start,\n      end: end,\n      delay: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      addToList: this.addToList,\n      header: \"Projects\",\n      thisSite: \"/projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), this.getComponents(this.state.list));\n  }\n\n}\n\nexport default ProjectPage;\n/*\n<ProjectContainer/>\n */","map":{"version":3,"sources":["/Users/se/Documents/resume/dynamic_website/resume_website/src/components/pageComponent/ProjectsPage.js"],"names":["React","Component","Background","Menu","Project","twitter","fingertime","StackGrid","transitions","scaleDown","start","end","ProjectPage","constructor","props","something","grid","updateLayout","addToList","item","setState","filterSet","Set","add","console","log","state","removeFromSet","getComponents","list","appear","appeared","enter","entered","leaved","includes","some","r","indexOf","history","push","match","url","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport Background from \"../backgroundComponent/Background\";\nimport Menu from \"../menuComponent/Menu\";\nimport \"../../assets/css/projectPage.css\";\nimport Project from \"../projectsComponent/Project\";\nimport twitter from \"../../assets/img/twitter.png\";\nimport fingertime from \"../../assets/img/fingerTime.png\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\n\nconst { scaleDown } = transitions;\n\nvar start = \"0,0 70,0 60,40 50,60 40,100 0,100\",\n    end   = \"0,0 25,0 20,20 20,80 15,100 0,100\";\n\nclass ProjectPage extends Component{\n    constructor(props) {\n        super(props);\n        this.props.history.push('/');\n        this.props.history.push(this.props.match.url);\n        this.state = {\n            filterSet : new Set()\n        }\n    }\n\n    something = () => {\n        this.grid.updateLayout();\n    };\n\n    render() {\n        return (\n            <div className={\"projectPage\"}>\n                <Background start={start} end={end} delay={0}/>\n                <Menu addToList={this.addToList} header={\"Projects\"} thisSite={\"/projects\"}/>\n                {this.getComponents(this.state.list)}\n            </div>\n        );\n    }\n\n    addToList = item => {\n        this.setState(({ filterSet }) => ({\n            filterSet: new Set(filterSet).add(item)\n        }));\n        console.log(this.state.filterSet)\n    }\n\n    removeFromSet = item => {\n\n        console.log(this.state.filterSet)\n    }\n\n    getComponents = list => {\n        return(\n            <StackGrid\n                className={\"pintrestView\"}\n                columnWidth={300}\n                duration={500}\n                gutterWidth={20}\n                appearDelay={200}\n                appear={scaleDown.appear}\n                appeared={scaleDown.appeared}\n                enter={scaleDown.enter}\n                entered={scaleDown.entered}\n                leaved={scaleDown.leaved}\n                gridRef={grid => this.grid = grid}\n            >\n\n                { list.includes(\"Python\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n\n                { list.some(r =>[\"Application\",\"Swift\"].indexOf(r) >= 0) ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n\n                { list.includes(\"Python\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n\n                { list.some(r =>[\"Application\",\"Swift\"].indexOf(r) >= 0) ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n\n                { list.includes(\"Python\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n\n                { list.some(r =>[\"Application\",\"Swift\"].indexOf(r) >= 0) ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n            </StackGrid>\n        )\n    }\n\n}\n\nexport default ProjectPage;\n\n/*\n<ProjectContainer/>\n */"]},"metadata":{},"sourceType":"module"}