{"ast":null,"code":"var _jsxFileName = \"/Users/se/Documents/resume/dynamic_website/resume_website/src/components/pageComponent/ProjectsPage.js\";\nimport React, { Component } from \"react\";\nimport Background from \"../backgroundComponent/Background\";\nimport Menu from \"../menuComponent/Menu\";\nimport \"../../assets/css/projectPage.css\";\nimport Project from \"../projectsComponent/Project\";\nimport twitter from \"../../assets/img/twitter.png\";\nimport fingertime from \"../../assets/img/fingerTime.png\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\nconst scaleDown = transitions.scaleDown;\nvar start = \"0,0 70,0 60,40 50,60 40,100 0,100\",\n    end = \"0,0 25,0 20,20 20,80 15,100 0,100\";\n\nclass ProjectPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.something = () => {\n      this.grid.updateLayout();\n    };\n\n    this.addToList = item => {\n      this.setState({\n        filterSet: filterSet.add(item)\n      });\n      console.log(this.state.filterSet);\n      this.something();\n    };\n\n    this.removeFromSet = item => {\n      console.log(this.state.filterSet);\n    };\n\n    this.getComponents = set => {\n      return React.createElement(StackGrid, {\n        className: \"pintrestView\",\n        columnWidth: 300,\n        duration: 500,\n        gutterWidth: 20,\n        appearDelay: 200,\n        appear: scaleDown.appear,\n        appeared: scaleDown.appeared,\n        enter: scaleDown.enter,\n        entered: scaleDown.entered,\n        leaved: scaleDown.leaved,\n        gridRef: grid => this.grid = grid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, set.has(\"Python\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }) : null, set.has(\"Application\") || set.has(\"Swift\") ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }) : null, set.has(\"Python\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }) : null, set.has(\"Application\") || set.has(\"Swift\") ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }) : null, set.has(\"Python\") ? React.createElement(Project, {\n        height: \"300px\",\n        link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n        header: \"Twitter streams\",\n        modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n        image: twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }) : null, set.has(\"Application\") || set.has(\"Swift\") ? React.createElement(Project, {\n        height: \"200px\",\n        link: \"https://github.com/edsimon/HangTime\",\n        header: \"Training app\",\n        modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n        image: fingertime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }) : null);\n    };\n\n    this.props.history.push('/');\n    this.props.history.push(this.props.match.url);\n    this.state = {\n      filterSet: new Set()\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Background, {\n      start: start,\n      end: end,\n      delay: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      addToList: this.addToList,\n      header: \"Projects\",\n      thisSite: \"/projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), this.getComponents(this.state.filterSet));\n  }\n\n}\n\nexport default ProjectPage;\n/*\n<ProjectContainer/>\n */","map":{"version":3,"sources":["/Users/se/Documents/resume/dynamic_website/resume_website/src/components/pageComponent/ProjectsPage.js"],"names":["React","Component","Background","Menu","Project","twitter","fingertime","StackGrid","transitions","scaleDown","start","end","ProjectPage","constructor","props","something","grid","updateLayout","addToList","item","setState","filterSet","add","console","log","state","removeFromSet","getComponents","set","appear","appeared","enter","entered","leaved","has","history","push","match","url","Set","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport Background from \"../backgroundComponent/Background\";\nimport Menu from \"../menuComponent/Menu\";\nimport \"../../assets/css/projectPage.css\";\nimport Project from \"../projectsComponent/Project\";\nimport twitter from \"../../assets/img/twitter.png\";\nimport fingertime from \"../../assets/img/fingerTime.png\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\n\nconst { scaleDown } = transitions;\n\nvar start = \"0,0 70,0 60,40 50,60 40,100 0,100\",\n    end   = \"0,0 25,0 20,20 20,80 15,100 0,100\";\n\nclass ProjectPage extends Component{\n    constructor(props) {\n        super(props);\n        this.props.history.push('/');\n        this.props.history.push(this.props.match.url);\n        this.state = {\n            filterSet : new Set()\n        }\n    }\n\n    something = () => {\n        this.grid.updateLayout();\n    };\n\n    render() {\n        return (\n            <div className={\"projectPage\"}>\n                <Background start={start} end={end} delay={0}/>\n                <Menu addToList={this.addToList} header={\"Projects\"} thisSite={\"/projects\"}/>\n                {this.getComponents(this.state.filterSet)}\n            </div>\n        );\n    }\n\n    addToList = item => {\n        this.setState(({\n            filterSet: filterSet.add(item)\n        }));\n        console.log(this.state.filterSet)\n        this.something()\n    }\n\n    removeFromSet = item => {\n\n        console.log(this.state.filterSet)\n    }\n\n    getComponents = set => {\n        return(\n            <StackGrid\n                className={\"pintrestView\"}\n                columnWidth={300}\n                duration={500}\n                gutterWidth={20}\n                appearDelay={200}\n                appear={scaleDown.appear}\n                appeared={scaleDown.appeared}\n                enter={scaleDown.enter}\n                entered={scaleDown.entered}\n                leaved={scaleDown.leaved}\n                gridRef={grid => this.grid = grid}\n            >\n\n                { set.has(\"Python\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n\n                { set.has(\"Application\") || set.has(\"Swift\") ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n\n                { set.has(\"Python\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n\n                { set.has(\"Application\") || set.has(\"Swift\") ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n\n                { set.has(\"Python\") ? <Project\n                    height={\"300px\"}\n                    link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                    header={\"Twitter streams\"}\n                    modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                    image={twitter}/> : null}\n\n                { set.has(\"Application\") || set.has(\"Swift\") ? <Project\n                    height={\"200px\"}\n                    link={\"https://github.com/edsimon/HangTime\"}\n                    header={\"Training app\"}\n                    modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                    image={fingertime}/> : null}\n            </StackGrid>\n        )\n    }\n\n}\n\nexport default ProjectPage;\n\n/*\n<ProjectContainer/>\n */"]},"metadata":{},"sourceType":"module"}