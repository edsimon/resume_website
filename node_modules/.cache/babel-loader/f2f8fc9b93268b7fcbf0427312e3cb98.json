{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = PageSVG;\nexports.PageSVGInternal = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _pdfjsDist = _interopRequireDefault(require(\"pdfjs-dist\"));\n\nvar _PageContext = _interopRequireDefault(require(\"../PageContext\"));\n\nvar _utils = require(\"../shared/utils\");\n\nvar _propTypes2 = require(\"../shared/propTypes\");\n\nvar PageSVGInternal =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  (0, _inherits2.default)(PageSVGInternal, _PureComponent);\n\n  function PageSVGInternal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PageSVGInternal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PageSVGInternal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"state\", {\n      svg: null\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"onRenderSuccess\", function () {\n      _this.renderer = null;\n      var _this$props = _this.props,\n          onRenderSuccess = _this$props.onRenderSuccess,\n          page = _this$props.page,\n          scale = _this$props.scale;\n      (0, _utils.callIfDefined)(onRenderSuccess, (0, _utils.makePageCallback)(page, scale));\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"onRenderError\", function (error) {\n      if ((0, _utils.isCancelException)(error)) {\n        return;\n      }\n\n      (0, _utils.errorOnDev)(error);\n      var onRenderError = _this.props.onRenderError;\n      (0, _utils.callIfDefined)(onRenderError, error);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"renderSVG\", function () {\n      var page = _this.props.page;\n      _this.renderer = page.getOperatorList();\n      return _this.renderer.then(function (operatorList) {\n        var svgGfx = new _pdfjsDist.default.SVGGraphics(page.commonObjs, page.objs);\n        _this.renderer = svgGfx.getSVG(operatorList, _this.viewport).then(function (svg) {\n          _this.setState({\n            svg: svg\n          }, _this.onRenderSuccess);\n        }).catch(_this.onRenderError);\n      }).catch(_this.onRenderError);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"drawPageOnContainer\", function (element) {\n      var svg = _this.state.svg;\n\n      if (!element || !svg) {\n        return;\n      } // Append SVG element to the main container, if this hasn't been done already\n\n\n      if (!element.firstElementChild) {\n        element.appendChild(svg);\n      }\n\n      var _this$viewport = _this.viewport,\n          width = _this$viewport.width,\n          height = _this$viewport.height;\n      svg.setAttribute('width', width);\n      svg.setAttribute('height', height);\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(PageSVGInternal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderSVG();\n    }\n    /**\n     * Called when a page is rendered successfully.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$viewport2 = this.viewport,\n          width = _this$viewport2.width,\n          height = _this$viewport2.height;\n      return _react.default.createElement(\"div\", {\n        className: \"react-pdf__Page__svg\",\n        style: {\n          display: 'block',\n          backgroundColor: 'white',\n          overflow: 'hidden',\n          width: width,\n          height: height,\n          userSelect: 'none' // Note: This cannot be shortened, as we need this function to be called with each render.\n\n        },\n        ref: function ref(_ref) {\n          return _this2.drawPageOnContainer(_ref);\n        }\n      });\n    }\n  }, {\n    key: \"viewport\",\n    get: function get() {\n      var _this$props2 = this.props,\n          page = _this$props2.page,\n          rotate = _this$props2.rotate,\n          scale = _this$props2.scale;\n      return page.getViewport({\n        scale: scale,\n        rotation: rotate\n      });\n    }\n  }]);\n  return PageSVGInternal;\n}(_react.PureComponent);\n\nexports.PageSVGInternal = PageSVGInternal;\nPageSVGInternal.propTypes = {\n  onRenderError: _propTypes.default.func,\n  onRenderSuccess: _propTypes.default.func,\n  page: _propTypes2.isPage.isRequired,\n  rotate: _propTypes2.isRotate,\n  scale: _propTypes.default.number\n};\n\nfunction PageSVG(props) {\n  return _react.default.createElement(_PageContext.default.Consumer, null, function (context) {\n    return _react.default.createElement(PageSVGInternal, (0, _extends2.default)({}, context, props));\n  });\n}","map":null,"metadata":{},"sourceType":"script"}