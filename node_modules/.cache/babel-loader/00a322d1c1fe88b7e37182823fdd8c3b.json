{"ast":null,"code":"var _jsxFileName = \"/Users/se/Documents/resume/dynamic_website/resume_website/src/components/Projects.js\";\nimport React, { Component } from \"react\";\nimport StackGrid from \"react-stack-grid\";\nimport Project from \"./Project\";\nimport twitter from \"../assets/img/twitter.jpg\";\nimport fingertime from \"../assets/img/fingerTime.jpg\";\nimport FilterButton from \"./FilterButton\";\nimport resume from \"../assets/img/Simon-Edvardsson-resume-website.jpg\";\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showProjects = () => {\n      if (!this.state.show) {\n        this.setState({\n          show: true,\n          button: \"Hide all\"\n        });\n      } else {\n        this.setState({\n          show: false,\n          button: \"Show all\"\n        });\n      }\n    };\n\n    this.manageFilter = item => {\n      if (!this.state.haveFilter) {\n        this.setState({\n          filterSet: new Set(),\n          haveFilter: true\n        });\n        this.addItem(item);\n      } else {\n        if (this.state.filterSet.has(item)) {\n          this.removeItem(item);\n        } else {\n          this.addItem(item);\n        }\n      }\n    };\n\n    this.getComponents = set => {\n      if (this.state.show) {\n        return React.createElement(\"div\", {\n          className: \"pinCont\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(StackGrid, {\n          className: \"pintrestView\",\n          columnWidth: 300,\n          duration: 500,\n          gutterWidth: 20,\n          appearDelay: 200,\n          gridRef: grid => this.grid = grid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, set.has(\"Java\") ? React.createElement(Project, {\n          height: \"300px\",\n          link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n          header: \"Twitter streams\",\n          modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n          image: twitter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }) : null, set.has(\"Application\") || set.has(\"Swift\") ? React.createElement(Project, {\n          height: \"200px\",\n          link: \"https://github.com/edsimon/HangTime\",\n          header: \"Training app\",\n          modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n          image: fingertime,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }) : null, set.has(\"Website\") || set.has(\"React\") ? React.createElement(Project, {\n          height: \"300px\",\n          totHeight: \"350px\",\n          link: \"https://github.com/edsimon/resume_website\",\n          header: \"Personal Website\",\n          modalInfo: \"Created my own website from scratch using React and \",\n          image: resume,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }) : null));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"pinCont\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(StackGrid, {\n          className: \"pintrestView\",\n          columnWidth: 300,\n          duration: 500,\n          gutterWidth: 20,\n          appearDelay: 200,\n          gridRef: grid => this.grid = grid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(Project, {\n          height: \"300px\",\n          totHeight: \"350px\",\n          link: \"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\",\n          header: \"Twitter streams\",\n          modalInfo: \"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\",\n          image: twitter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }), React.createElement(Project, {\n          height: \"200px\",\n          totHeight: \"250px\",\n          link: \"https://github.com/edsimon/HangTime\",\n          header: \"Training app\",\n          modalInfo: \"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\",\n          image: fingertime,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }), React.createElement(Project, {\n          height: \"300px\",\n          totHeight: \"350px\",\n          link: \"https://github.com/edsimon/resume_website\",\n          header: \"Personal Website\",\n          modalInfo: \"Created my own website from scratch using React and \",\n          image: resume,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        })));\n      }\n    };\n\n    this.state = {\n      show: false,\n      button: \"Show all\",\n      filterSet: new Set([\"Java\", \"Python\", \"Machine learning\", \"Application\", \"Swift\", \"Website\", \"React\"]),\n      haveFilter: false,\n      allItems: [\"Java\", \"Python\", \"Machine learning\", \"Application\", \"Swift\", \"Website\", \"React\"]\n    };\n    this.manageFilter = this.manageFilter.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectHeaderStart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"projectHeaderStart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \" My recent projects\"), React.createElement(\"p\", {\n      className: \"projectparagraf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Things i'm proud of, use filter to choose language or field\"), React.createElement(\"div\", {\n      className: \"filterProjects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.show ? React.createElement(FilterButton, {\n      text: \"Java\",\n      filter: this.manageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }) : null, this.state.show ? React.createElement(FilterButton, {\n      text: \"Python\",\n      filter: this.manageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }) : null, this.state.show ? React.createElement(FilterButton, {\n      text: \"Application\",\n      filter: this.manageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }) : null, this.state.show ? React.createElement(FilterButton, {\n      text: \"Machine learning\",\n      filter: this.manageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }) : null, this.state.show ? React.createElement(FilterButton, {\n      text: \"Swift\",\n      filter: this.manageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : null, React.createElement(\"button\", {\n      className: \"seeAll filterButton\",\n      onClick: this.showProjects,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.state.button)), this.getComponents(this.state.filterSet));\n  }\n\n  addItem(item) {\n    this.setState(({\n      filterSet\n    }) => ({\n      filterSet: new Set(filterSet).add(item)\n    }));\n  }\n\n  removeItem(item) {\n    this.setState(({\n      filterSet\n    }) => {\n      const newChecked = new Set(filterSet);\n      newChecked.delete(item);\n      return {\n        filterSet: newChecked\n      };\n    });\n\n    if (this.state.filterSet.size === 1) {\n      this.setState({\n        filterSet: new Set(this.state.allItems),\n        haveFilter: false\n      });\n    }\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/se/Documents/resume/dynamic_website/resume_website/src/components/Projects.js"],"names":["React","Component","StackGrid","Project","twitter","fingertime","FilterButton","resume","Projects","constructor","props","showProjects","state","show","setState","button","manageFilter","item","haveFilter","filterSet","Set","addItem","has","removeItem","getComponents","set","grid","allItems","bind","render","add","newChecked","delete","size"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport StackGrid from \"react-stack-grid\";\nimport Project from \"./Project\";\nimport twitter from \"../assets/img/twitter.jpg\";\nimport fingertime from \"../assets/img/fingerTime.jpg\";\nimport FilterButton from \"./FilterButton\";\nimport resume from \"../assets/img/Simon-Edvardsson-resume-website.jpg\"\n\nclass Projects extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            show: false,\n            button: \"Show all\",\n            filterSet : new Set([\"Java\",\"Python\",\"Machine learning\",\"Application\",\"Swift\",\"Website\", \"React\"]),\n            haveFilter : false,\n            allItems : [\"Java\",\"Python\",\"Machine learning\",\"Application\",\"Swift\", \"Website\", \"React\"]\n        }\n        this.manageFilter = this.manageFilter.bind(this)\n    }\n\n    render() {\n        return (\n            <div className=\"projectHeaderStart\">\n                <h1 className=\"projectHeaderStart\"> My recent projects</h1>\n                <p className={\"projectparagraf\"}>\n                    Things i'm proud of, use filter to choose language or field\n                </p>\n                <div className=\"filterProjects\">\n                    {this.state.show ? <FilterButton text={\"Java\"} filter={this.manageFilter}/> : null}\n                    {this.state.show ? <FilterButton text={\"Python\"} filter={this.manageFilter}/> : null}\n                    {this.state.show ? <FilterButton text={\"Application\"} filter={this.manageFilter}/> : null}\n                    {this.state.show ? <FilterButton text={\"Machine learning\"} filter={this.manageFilter}/> : null}\n                    {this.state.show ? <FilterButton text={\"Swift\"} filter={this.manageFilter}/> : null}\n                    <button className=\"seeAll filterButton\" onClick={ this.showProjects }>{this.state.button}</button>\n                </div>\n                {this.getComponents(this.state.filterSet)}\n            </div>\n        );\n    }\n\n\n\n    showProjects = () => {\n        if (!this.state.show) {\n            this.setState({\n                show: true,\n                button: \"Hide all\"\n            })\n        }\n        else{\n            this.setState({\n                show: false,\n                button: \"Show all\"\n            })\n        }\n    }\n\n    manageFilter = item => {\n        if(!this.state.haveFilter){\n            this.setState({\n                filterSet: new Set(),\n                haveFilter: true\n            })\n            this.addItem(item)\n        }\n        else {\n            if (this.state.filterSet.has(item)) {\n                this.removeItem(item)\n            } else {\n                this.addItem(item)\n            }\n        }\n    };\n\n    addItem(item) {\n        this.setState(({ filterSet }) => ({\n            filterSet: new Set(filterSet).add(item)\n        }));\n    }\n\n    removeItem(item) {\n        this.setState(({ filterSet }) => {\n            const newChecked = new Set(filterSet);\n            newChecked.delete(item);\n\n            return {\n                filterSet: newChecked\n            };\n        });\n        if (this.state.filterSet.size === 1){\n            this.setState({\n                filterSet: new Set(this.state.allItems),\n                haveFilter: false\n            })\n        }\n    }\n\n    getComponents = set => {\n        if (this.state.show){\n            return(\n                <div className=\"pinCont\">\n                    <StackGrid\n                        className={\"pintrestView\"}\n                        columnWidth={300}\n                        duration={500}\n                        gutterWidth={20}\n                        appearDelay={200}\n                        gridRef={grid => this.grid = grid}\n                    >\n\n                        { set.has(\"Java\") ? <Project\n                            height={\"300px\"}\n                            link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                            header={\"Twitter streams\"}\n                            modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                            image={twitter}/> : null}\n\n                        { set.has(\"Application\") || set.has(\"Swift\") ? <Project\n                            height={\"200px\"}\n                            link={\"https://github.com/edsimon/HangTime\"}\n                            header={\"Training app\"}\n                            modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                            image={fingertime}/> : null}\n\n                        { set.has(\"Website\") || set.has(\"React\") ? <Project\n                            height={\"300px\"}\n                            totHeight={\"350px\"}\n                            link={\"https://github.com/edsimon/resume_website\"}\n                            header={\"Personal Website\"}\n                            modalInfo={\"Created my own website from scratch using React and \"}\n                            image={resume}/> : null}\n                    </StackGrid>\n                </div>\n            )\n        }\n        else{\n            return (\n                <div className=\"pinCont\">\n                    <StackGrid\n                        className={\"pintrestView\"}\n                        columnWidth={300}\n                        duration={500}\n                        gutterWidth={20}\n                        appearDelay={200}\n                        gridRef={grid => this.grid = grid}\n                    >\n                        <Project\n                            height={\"300px\"}\n                            totHeight={\"350px\"}\n                            link={\"https://github.com/edsimon/TwitterStreams-sentimental-value-live-plotted-on-map\"}\n                            header={\"Twitter streams\"}\n                            modalInfo={\"So in this project I have been doing som explorations in the tweepy library. I have been trying to map the twitter feeds på location and got some pretty good results in my opinion.\"}\n                            image={twitter}/>\n                        <Project\n                            height={\"200px\"}\n                            totHeight={\"250px\"}\n                            link={\"https://github.com/edsimon/HangTime\"}\n                            header={\"Training app\"}\n                            modalInfo={\"Made a app to simplify my training in the climbing gym. Makes it possible to create sessions and look back at some statistics.\"}\n                            image={fingertime}/>\n                        <Project\n                            height={\"300px\"}\n                            totHeight={\"350px\"}\n                            link={\"https://github.com/edsimon/resume_website\"}\n                            header={\"Personal Website\"}\n                            modalInfo={\"Created my own website from scratch using React and \"}\n                            image={resume}/>\n                    </StackGrid>\n                </div>\n            );\n        }\n    }\n}\n\n\n\nexport default Projects;"]},"metadata":{},"sourceType":"module"}